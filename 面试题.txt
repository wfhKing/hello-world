1.什么是线程
	线程是程序中一个单一的顺序控制流程，是进程内一个相对独立的、可调度的执行单元，是系统
独立调度和分派CPU的基本单位指令运行时的程序的调度单位。可以通过他进行多处理器编程。
	一个线程要执行任务，必须要得有线程
	一个进程的所有任务都在线程中执行的
	一个线程执行任务是串行的，也就是说一个线程，同一时间内，只能执行一个任务


2.线程和进程的区别
	线程是进程的子集，一个进程可以有多个线程，每条线程并行执行不同的任务，不同的进程使用
不同的内存空间，而所有的线程共享一片相同的内存空间


3.如何在 Java 中使用新线程
	在语言层面有两种方式，java.lang.Thread类的实例就是一个线程，但是它需要调用java.lang.
Runnable接口来执行，由于线程类本身就是调用的Runnable接口,所以可以继承java.lang.Thread类或者
直接点了Runnable接口来重写run()方法实现线程。


4.Thread中start()和run()的区别
	start()方法是用来启动线程，而启动的线程会调用run()方法,同时该方法不能重复调用。
	run()方法和普通的方法一样,可以重复执行，不会长久新的线程


5.Thread.join 方法的用处
	等待其他线程终止，在当前线程中调用另一个线程的join()方法，则当前线程转入阻塞状态，
直到另一个进程运行结束，当前线程再由阻塞转为就绪状态



6.假如新建T1、T2、T3三个线程，如何保证它们按顺序执行？
	（1）在T3线程中调用T2线程,再在T2线程中调用T1线程
	（2）调用join()方法


7.volatile 变量是做什么的。
	为了防止编译器指令重排二导致双重检查所失效
	指令重排:是为了优化代码执行效率而存在的，虽然在单线程中效果拔群，但在多线程中
却能带来麻烦。


8.如果一个线程中发生了异常会怎么样
	（1）如果该异常被捕获或抛出，则程序继续运行。
	（2）如果异常没有被捕获，该线程就会停止运行，如果该线程没有和其他线程关联，就不会影响
到其他线程，因为线程是独立运行的。


9.什么是 ThreadLocal 变量
	ThreadLocal不是一个线程，是线程的一个本地化对象，当工作与多线程中的对象使用ThreadLocal
维护变量时，ThreadLocal为美国使用该变量的线程分派一个独立的变量副本。所有每一个线程都可以独立
地改变自己的副本，而不会影响其他线程对应的副本。
	ThreadLocal不是线程,而是线程的一个变量，可以理解为线程类的属性变量
	ThreadLocal在类中通常定义为静态变量。
	每个线程偶自己的一个ThreadLocal，它是变量的一个"拷贝"，修改它不影响其他线程。



10.什么是线程池，为什么要使用
	线程池是指在处刷一个多线程应用程序过程中创建一个线程集合，然后在需要执行新的任务是重用
这些线程而不是新建一个线程。
	它是一种多线程处理形式，处理过程中将任务添加到队列，然后在创建线程后自动启动这些任务。
	使用线程池的好处:
		（1）减少了创建和销毁线程的次数，每个工作线程都可以被重复利用，可执行多个任务
		（1）可以根据系统的承受能力，调整线程池中工作线程的书面，防止因为过多的内存，
		而把服务器累趴下。



























