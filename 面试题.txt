1.什么是线程
	线程是程序中一个单一的顺序控制流程，是进程内一个相对独立的、可调度的执行单元，是系统
独立调度和分派CPU的基本单位指令运行时的程序的调度单位。可以通过他进行多处理器编程。
	一个线程要执行任务，必须要得有线程
	一个进程的所有任务都在线程中执行的
	一个线程执行任务是串行的，也就是说一个线程，同一时间内，只能执行一个任务


2.线程和进程的区别
	线程是进程的子集，一个进程可以有多个线程，每条线程并行执行不同的任务，不同的进程使用
不同的内存空间，而所有的线程共享一片相同的内存空间


3.如何在 Java 中使用新线程
	在语言层面有两种方式，java.lang.Thread类的实例就是一个线程，但是它需要调用java.lang.
Runnable接口来执行，由于线程类本身就是调用的Runnable接口,所以可以继承java.lang.Thread类或者
直接点了Runnable接口来重写run()方法实现线程。


4.Thread中start()和run()的区别
	start()方法是用来启动线程，而启动的线程会调用run()方法,同时该方法不能重复调用。
	run()方法和普通的方法一样,可以重复执行，不会长久新的线程


5.Thread.join 方法的用处
	等待其他线程终止，在当前线程中调用另一个线程的join()方法，则当前线程转入阻塞状态，
直到另一个进程运行结束，当前线程再由阻塞转为就绪状态



















